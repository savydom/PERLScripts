#!/bin/perl
#    $Id: monitor_saves_recovers.pl,v 1.5 2017/03/13 13:56:17 gbrandt Exp gbrandt $
#
#
#
#
###########################################################################
################  S P A W A R   S H A R E D   S E R V I C E S   ###########
###########################################################################
#
#          File:  monitor_saves_recovers.pl
#        Author:  Gene Brandt
#          Date:  Friday, March  3, 2017
#
#                 Generated by bshdr
#                 Developed by Gene Brandt
#                 504 452-3250
##########################################################################################
#                                                                                        #
#                                                                                        #
#                                                                                        #
#        # ###        ##### ##                                       ##                  #
#      /  /###  /  ######  /##                                        ##                 #
#     /  /  ###/  /#   /  / ##                                        ##       #         #
#    /  ##   ##  /    /  /  ##                                        ##      ##         #
#   /  ###           /  /   /                                         ##      ##         #
#  ##   ##          ## ##  /   ###  /###     /###   ###  /###     ### ##    ########     #
#  ##   ##   ###    ## ## /     ###/ #### / / ###  / ###/ #### / ######### ########      #
#  ##   ##  /###  / ## ##/       ##   ###/ /   ###/   ##   ###/ ##   ####     ##         #
#  ##   ## /  ###/  ## ## ###    ##       ##    ##    ##    ##  ##    ##      ##         #
#  ##   ##/    ##   ## ##   ###  ##       ##    ##    ##    ##  ##    ##      ##         #
#   ##  ##     #    #  ##     ## ##       ##    ##    ##    ##  ##    ##      ##         #
#    ## #      /       /      ## ##       ##    ##    ##    ##  ##    ##      ##         #
#     ###     /    /##/     ###  ##       ##    /#    ##    ##  ##    /#      ##         #
#      ######/    /  ########    ###       ####/ ##   ###   ###  ####/        ##         #
#        ###     /     ####       ###       ###   ##   ###   ###  ###          ##        #
#                #                                                                       #
#                 ##                                                                     #
#                                                                                        #
##########################################################################################
#
###########################################################################
#
#	Description:
#	Monitors and logs NetWorker Saves and recovers.
#
#       $Log: monitor_saves_recovers.pl,v $
#       Revision 1.5  2017/03/13 13:56:17  gbrandt
#       Created an internal distribution list. Placed mail in a file and used
#       mutt to distribute information.
#
#       Revision 1.4  2017/03/13 13:07:41  gbrandt
#       Added run date and time to log data record.
#
#       Revision 1.3  2017/03/09 17:32:35  gbrandt
#       Changed output spacing to make output easier to read.
#
#       Revision 1.2  2017/03/09 17:18:53  gbrandt
#       First production version. In addition to stdout data is
#       stored in /backup/logs/monitor_saves_recovers.csv.
#
#       Revision 1.1  2017/03/03 15:25:26  gbrandt
#       Initial revision
#
#
###########################################################################
################  S P A W A R   S H A R E D   S E R V I C E S   ###########
###########################################################################
#                            Environmentals                               #
###########################################################################
#
#

$DEBUG         = 0;
$RPTDATE       = `date '+%m/%d/%Y'`;
$RPTTIME       = `date '+%H:%M:%S'`;
$QRY_FILE_NAME = "/tmp/monitor_saves_recovers$$.qry";
$MSRDataFile   = "/backup/logs/monitor_saves_recovers.csv";
$MuttBody      = "/tmp/monitor_saves_recovers_mail.txt";
$MailSubject   = "\"NetWorker Saves and Recovers\"";
$CarbonCopy    = "eugene.brandt.ctr\@navy.mil";

if ($DEBUG)
  {
  $DistributionList = "eugene.brandt.ctr\@navy.mil";
  }
else
  {
  $DistributionList = "eugene.brandt.ctr\@navy.mil,peter.reed.ctr\@navy.mil,jeffrey.l.rodriguez.ctr\@navy.mil,Cody.P.Crawford\@navy.mil";
  }

#
#
###########################################################################
################  S P A W A R   S H A R E D   S E R V I C E S   ###########
###########################################################################
#                               Processing                                #
###########################################################################
#
#

chomp($RPTDATE);
chomp($RPTTIME);

introduction("Monitor NetWorker Saves and Recovers");

#
#     Create query.
#

open( QRY, ">$QRY_FILE_NAME" )
  || die "     Error: Unable to open $QRY_FILE_NAME $!!\n\n";
printf QRY "option Dynamic\n";
printf QRY "option Hidden\n";
printf QRY ". type: NSR\n";
printf QRY "show save totals;recover totals;totals since\n";
printf QRY "print\n";
close(QRY);

#
#     Open CSV Data File.
#

open( CSV, ">>$MSRDataFile" )
  || die "\n     Error: Unable to open $MSRDataFile $!!\n\n";

#
#     Open mail body file.
#

open( MAIL, ">$MuttBody") || die "\n\n     Error: Unable to open $MuttBody $!!\n\n";

#
#     Run query.
#

run_query(sscprodeng);
run_query(sscprodeng2);

close(CSV);
chmod( 0660, $MSRDataFile );

MailResults();


#
#
###########################################################################
################  S P A W A R   S H A R E D   S E R V I C E S   ###########
###########################################################################
#                             Sub  Routines                               #
###########################################################################
#
#

sub introduction {
    $ProgName      = shift;
    $NameLength    = length($ProgName);
    $NameHeader    = "|   +++  ";
    $NameTrailer   = "  +++   |";
    $NameOffset    = 10;
    $DashCount     = 16 + $NameLength;
    $VersionLength = 18;                  #      Length of Version information.
    $VersionOffset = ( $DashCount - $VersionLength ) / 2;

    if ($DEBUG) {
        printf "     Debug Line: %3d Program name:%s\n     Length:%d",
          __LINE__, $ProgName, $NameLength;
        printf "     VersionOffset: %d\n", $VersionOffset;
    }
    open( SOURCE, $0 ) || die "Unable to open $0 for reading\n\n";
    while (<SOURCE>) {
        if (/Id:/) {
            @Column  = split(/\s+/);
            $ProgVer = $Column[3];
            printf "\n\n";
            print ' ' x $NameOffset;
            printf "+";
            print '-' x $DashCount;
            print "+\n";

            print ' ' x $NameOffset;
            printf "%s",   $NameHeader;
            printf "%s",   $ProgName;
            printf "%s\n", $NameTrailer;

            print ' ' x $NameOffset;
            print "|";
            print ' ' x $VersionOffset;
            printf "-- Version %4s --", $ProgVer;
            print " "
              if ( $NameLength % 2 == 1 )
              ;   #      Print an extra " " if the name length is an odd number.
            print ' ' x $VersionOffset;
            print "|\n";

            print ' ' x $NameOffset;
            printf "+";
            print '-' x $DashCount;
            print "+\n";
            last;
        }
    }
    close(SOURCE);
}

sub run_query {
    $Server     = shift;
    @QryResults = `nsradmin -s $Server -i $QRY_FILE_NAME`;
    foreach $RLine (@QryResults) {
        chomp($RLine);
        $RLine =~ tr /;//d;     #     Remove ;s
        $RLine =~ tr /\"//d;    #     Remove "s
        $RLine =~ s/^\s+//;

        #  if ($RLine =~ "save" || $RLine =~ "recover" || $RLine =~ "since")
        if ( $RLine =~ "save" ) {
            @Value = split( /\s+/, $RLine );
            if ($DEBUG) {
                printf
"     Debug Line: %3d Save Value: @Value\n      Value Count: %d\n",
                  __LINE__, $#Value;
            }
            $SaveSessions = $Value[2];
            $SaveTotals   = $Value[4];
            $SaveMeasure  = $Value[5];
            if ( length $SaveMeasure == 0 ) {
                $SaveMeasure = "--";
            }
        }

        if ( $RLine =~ "recover" ) {
            @Value = split( /\s+/, $RLine );
            if ($DEBUG) {
                printf
"     Debug Line: %3d Save Value: @Value\n      Value Count: %d\n",
                  __LINE__, $#Value;
            }
            $RecSessions = $Value[2];
            $RecTotals   = $Value[4];
            $RecMeasure  = $Value[5];
            if ( length $RecMeasure == 0 ) {
                $RecMeasure = "--";
            }
        }

        if ( $RLine =~ "since" ) {
            ( $Attr, @Value ) = split( /\s+/, $RLine );
            if ($DEBUG) {
                printf
"     Debug Line: %3d Since Value: @Value\n     Value Count: %d\n",
                  __LINE__, $#Value;
                printf
"           $Value[1]     $Value[2]     $Value[3]    $Value[4]   $Value[5]\n";
            }
            $SinceDay  = $Value[1];
            $SinceMon  = $Value[2];
            $SinceDOM  = $Value[3];
            $SinceTime = $Value[4];
            $SinceYear = $Value[5];
        }

        #    }
    }
    printf MAIL "\n     Monitor NetWorker Saves and Recovers\n     Version: $ProgVer\n\n";
    printf MAIL "     %12s  %8s   %5s  %7s  %s\n", $Server, "Sessions", "Amount",
      "Measure", "Since";
    printf MAIL "     %12s  %8d   %5d  %7s   %3s %2d-%3s-%4d %s\n",
      "Saves", $SaveSessions, $SaveTotals, $SaveMeasure, $SinceDay, $SinceDOM,
      $SinceMon, $SinceYear, $SinceTime;
    printf MAIL "     %12s  %8d   %5d  %7s\n",
      "Recovers", $RecSessions, $RecTotals, $RecMeasure;
    printf MAIL "\n";
    #
    #      Save output.
    #
    if ($DEBUG) {
        printf "%s,%s,%s,%s,%d,%d,%s,%s,%d,%d,%s,%s,%s,%s,%s,%s\n", $RPTDATE,
          $RPTTIME,      $Server,     "Saves",
          $SaveSessions, $SaveTotals, $SaveMeasure, "Recovers", $RecSessions,
          $RecTotals,    $RecMeasure, $SinceDay,
          $SinceDOM, $SinceMon, $SinceYear, $SinceTime;
    }
    else {
        printf CSV "%s,%s,%s,%s,%d,%d,%s,%s,%d,%d,%s,%s,%s,%s,%s,%s\n",
          $RPTDATE, $RPTTIME, $Server, "Saves",
          $SaveSessions, $SaveTotals, $SaveMeasure, "Recovers", $RecSessions,
          $RecTotals, $RecMeasure, $SinceDay,
          $SinceDOM, $SinceMon, $SinceYear, $SinceTime;
    }
}

sub MailResults
  {
#     Use mutt to deliver output.
  if ($DEBUG)
    {
    printf "     Debug Line:  %3d -s $MailSubject $DistributionList -c $CarbonCopy -i $MuttBody \n\n",__LINE__;
    }
  @Mresults = ` /usr/bin/mutt -s $MailSubject $DistributionList -c $CarbonCopy -i $MuttBody  < /dev/null`;
  printf "     @Mresults\n";
  }
#
#
###########################################################################
################  S P A W A R   S H A R E D   S E R V I C E S   ###########
###########################################################################
#                               House Keeping                            #
###########################################################################
#
#

unlink($QRY_FILE_NAME);
unlink($MuttBody);
